// <auto-generated />
using System;
using EnhancedEpic.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnhancedEpic.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231231194015_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("EnhancedEpic.Models.GameOffer", b =>
                {
                    b.Property<string>("OfferId")
                        .HasColumnType("TEXT");

                    b.HasKey("OfferId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("EnhancedEpic.Models.PriceHistoryEntry", b =>
                {
                    b.Property<string>("PriceHistoryEntryId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("PriceHistoryEntryId");

                    b.HasIndex("RegionCode");

                    b.ToTable("PriceHistoryEntries");
                });

            modelBuilder.Entity("EnhancedEpic.Models.Promotion", b =>
                {
                    b.Property<string>("PromotionId")
                        .HasColumnType("TEXT");

                    b.Property<double>("DiscountRate")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("EnhancedEpic.Models.PromotionRegion", b =>
                {
                    b.Property<string>("PromotionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegionId")
                        .HasColumnType("TEXT");

                    b.HasKey("PromotionId", "RegionId");

                    b.HasIndex("RegionId");

                    b.ToTable("PromotionRegions");
                });

            modelBuilder.Entity("EnhancedEpic.Models.Region", b =>
                {
                    b.Property<string>("RegionCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameOfferId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RegionCode");

                    b.HasIndex("GameOfferId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("EnhancedEpic.Models.PriceHistoryEntry", b =>
                {
                    b.HasOne("EnhancedEpic.Models.Region", "Region")
                        .WithMany("PriceHistoryEntries")
                        .HasForeignKey("RegionCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("EnhancedEpic.Models.PromotionRegion", b =>
                {
                    b.HasOne("EnhancedEpic.Models.Promotion", null)
                        .WithMany("PromotionRegions")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EnhancedEpic.Models.Region", null)
                        .WithMany("PromotionRegions")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EnhancedEpic.Models.Region", b =>
                {
                    b.HasOne("EnhancedEpic.Models.GameOffer", "Game")
                        .WithMany("Regions")
                        .HasForeignKey("GameOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("EnhancedEpic.Models.GameOffer", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("EnhancedEpic.Models.Promotion", b =>
                {
                    b.Navigation("PromotionRegions");
                });

            modelBuilder.Entity("EnhancedEpic.Models.Region", b =>
                {
                    b.Navigation("PriceHistoryEntries");

                    b.Navigation("PromotionRegions");
                });
#pragma warning restore 612, 618
        }
    }
}
